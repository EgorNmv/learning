# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Категория обучения"""
type CategoryEntity {
  """описание категории"""
  description: String!

  """id категории"""
  id: Float!
}

"""Рекомендации и отзывы"""
type FeedbackEntity {
  """дата предоставления фидбека"""
  date: String!

  """id отзыва"""
  id: Float!

  """текст фидбека"""
  text: String!

  """курс, на который оставлен отзыв"""
  training: TrainingEntity!

  """тип(1-рекомендация, 2-отзыв)"""
  type: Float!

  """пользователь, оставивиший отзыв"""
  user: UserEntity!
}

"""Формат обучения"""
type FormatEntity {
  """описание формата обучения"""
  description: String!

  """id формата обучния"""
  id: Float!
}

input InputFeedback {
  date: String!
  text: String!
  trainingId: Float!
  type: Float!
  userId: Float!
}

input InputMaterial {
  link: String!
  trainingId: Float!
}

input InputOrganizer {
  address: String!
  name: String!
  site: String!
  type: Float!
}

input InputRequest {
  date: String!
  trainingId: Float!
  userId: Float!
}

input InputTraining {
  audienceId: Float!
  categoryId: Float!
  description: String!
  end: String!
  formatId: Float!
  label: String!
  name: String!
  organizerId: Float!
  site: String!
  start: String!
}

input InputUser {
  fullname: String!
  login: String!
  photo: String
  roleId: Float!
}

"""Материалы обучения"""
type MaterialEntity {
  """id материала"""
  id: Float!

  """ссылка на материалы в файловом хранилище"""
  link: String!

  """идентификатор обучения"""
  training: TrainingEntity!
}

type Mutation {
  createCategory(description: String!): CategoryEntity!
  createFeedback(data: InputFeedback!): FeedbackEntity!
  createFormat(description: String!): FormatEntity!
  createMaterial(data: InputMaterial!): MaterialEntity!
  createOrganizer(data: InputOrganizer!): OrganizerEntity!
  createRequest(data: InputRequest!): RequestEntity!
  createTargetAudience(description: String!): TargetAudienceEntity!
  createTraining(data: InputTraining!): TrainingEntity!
  createUser(data: InputUser!): UserEntity!
  deleteCategoryById(id: Float!): Boolean!
  deleteFeedbackById(id: Float!): Boolean!
  deleteFormatById(id: Float!): Boolean!
  deleteMaterialById(id: Float!): Boolean!
  deleteOrganizerById(id: Float!): Boolean!
  deleteTargetAudienceById(id: Float!): Boolean!
  deleteTrainingById(id: Float!): Boolean!
  deleteUserById(id: Float!): Boolean!
  updateCategoryById(description: String!, id: Float!): CategoryEntity!
  updateFeedbackById(data: InputFeedback!, id: Float!): FeedbackEntity!
  updateFormatById(description: String!, id: Float!): FormatEntity!
  updateMaterialById(data: InputMaterial!, id: Float!): MaterialEntity!
  updateOrganizerById(data: InputOrganizer!, id: Float!): OrganizerEntity!
  updateTargetAudienceById(description: String!, id: Float!): TargetAudienceEntity!
  updateTrainingById(data: InputTraining!, id: Float!): TrainingEntity!
  updateUserById(data: InputUser!, id: Float!): UserEntity!
  uploadFile(file: Upload!): Boolean!
}

"""Организатор обучения"""
type OrganizerEntity {
  """адресс организатора обучения"""
  address: String!

  """id организатора обучния"""
  id: Float!

  """имя организатора обучения"""
  name: String!

  """сайт организатора обучения"""
  site: String!

  """тип организатора обучения"""
  type: Float!
}

type Query {
  categories: [CategoryEntity!]!
  category(id: Float!): CategoryEntity
  feedback(id: Float!): FeedbackEntity
  feedbacks: [FeedbackEntity!]!
  format(id: Float!): FormatEntity
  formats: [FormatEntity!]!
  material(id: Float!): MaterialEntity
  materials: [MaterialEntity!]!
  organizer(id: Float!): OrganizerEntity
  organizers: [OrganizerEntity!]!
  request(id: Float!): RequestEntity
  requests: [RequestEntity!]!
  targetAudience(id: Float!): TargetAudienceEntity
  targetAudiences: [TargetAudienceEntity!]!
  training(id: Float!): TrainingEntity
  trainings: [TrainingEntity!]!
  trainingsByCategoryId(categoryId: Float!): [TrainingEntity!]!
  user(id: Float!): UserEntity
  users: [UserEntity!]!
}

"""Заявка на обучение"""
type RequestEntity {
  """дата подачи заявки на обучение"""
  date: String!

  """id заявки"""
  id: Float!

  """id обучния"""
  training: TrainingEntity!

  """пользователь, который отправил заявку"""
  user: UserEntity!
}

"""Роли пользователей"""
type RoleEntity {
  """описание роли"""
  description: String!

  """id роли"""
  id: Float!
}

"""Целевая аудитория"""
type TargetAudienceEntity {
  """описание целевой аудитории"""
  description: String!

  """id целевой аудитории"""
  id: Float!
}

"""Обучение"""
type TrainingEntity {
  """целевая аудитория обучения"""
  audience: TargetAudienceEntity!

  """категория обучения"""
  category: CategoryEntity!

  """описание обучения"""
  description: String!

  """дата окончания обучения"""
  end: String!

  """формат обучения"""
  format: FormatEntity!

  """id обучения"""
  id: Float!

  """ярлык(картинка) обучения"""
  label: String!

  """имя обучения"""
  name: String!

  """организатор обучения"""
  organizer: OrganizerEntity!

  """ссылка на информацию по обучению"""
  site: String!

  """дата начала обучения"""
  start: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

"""Пользователь"""
type UserEntity {
  """имя пользователя"""
  fullname: String!

  """id пользователя"""
  id: Float!

  """логин пользователя"""
  login: String!

  """аватар пользователя"""
  photo: String

  """роль пользователя"""
  role: RoleEntity!
}
